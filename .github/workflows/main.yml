name: Deploy DotNet project to Azure Function App

on:
  push:
    branches:
      [ main ]
    paths:
      - 'AzFuncDevOps'

  workflow_dispatch:

  

env:
  AZURE_FUNCTIONAPP_NAME: 'maranfunapp'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './AzFuncDevOps'       # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '9.0.x'                   # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}   

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
    
  
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        enable-oryx-build: false
        scm-do-build-during-deployment: true
        respect-funcignore: true
        
    - name: 'Log Deploy Status'
      if: always()
      shell: bash
      run: |
        echo "Deployment Status: ${{ steps.fa.outcome }}"
        if [ -d "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output" ]; then
        echo "Published directory exists"
        ls -la "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
        else
        echo "Published directory does not exist"
        fi